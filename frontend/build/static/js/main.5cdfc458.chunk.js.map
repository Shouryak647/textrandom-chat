{"version":3,"sources":["media/logo.png","components/Navbar.js","media/onlineUsers.mp4","media/searchbygender.mp4","media/chatfunction.mp4","components/VideoSection.js","media/friends_transparen.png","components/ContactForm.js","components/Footer.js","Pages/Landingpage.js","Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","components/Images/logo.png","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/miscellaneous/GroupChatListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/userAvatar/UserListItem.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","history","useHistory","as","p","bg","position","top","zIndex","display","justifyContent","boxShadow","alignItems","direction","color","src","logo","alt","boxSize","base","md","objectFit","mr","fontSize","textAlign","IconButton","aria-label","icon","Hamburger","variant","_active","_hover","href","width","onClick","push","borderRadius","VideoSection","title","description","videoUrl","reverse","py","px","flex","mb","maxW","autoPlay","loop","muted","playsInline","onContextMenu","e","preventDefault","controls","ml","ContactForm","useState","name","email","message","formData","setFormData","toast","useToast","handleChange","target","value","handleSubmit","a","FormData","append","fetch","method","body","status","duration","isClosable","maxWidth","mx","mt","borderWidth","onSubmit","id","isRequired","type","onChange","placeholder","size","Footer","spacing","align","useBreakpointValue","fontWeight","textDecoration","Date","getFullYear","LandingPage","network_animation","autoplay","animationData","networkAnimation","renderer","showAnimation","showImages","minH","w","justify","className","options","height","friends","borderColor","opacity","borderStyle","onlineVideo","searchByVideo","chatfunctionVideo","ChatContext","createContext","ChatState","useContext","ChatProvider","children","selectedChat","setSelectedChat","user","setUser","notification","setNotification","chats","setChats","useEffect","userInfo","JSON","parse","localStorage","getItem","Provider","Login","show","setShow","setEmail","password","setPassword","loading","setLoading","useDisclosure","isOpen","onOpen","onClose","submitHandler","config","headers","axios","post","process","data","setItem","stringify","response","h","colorScheme","style","marginTop","isLoading","Signup","handleClick","setName","gender","setGender","age","setAge","confirmpassword","setConfirmpassword","pic","setPic","picLoading","setPicLoading","console","log","max","min","accept","pics","undefined","then","res","json","url","toString","catch","err","postDetails","files","Homepage","socket","selectedChatCompare","location","useLocation","tabIndex","setTabIndex","tab","URLSearchParams","search","get","centerContent","d","m","cursor","fontFamily","isFitted","index","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","ProfileModal","loggedInUser","handleDeleteAccount","Authorization","token","delete","removeItem","Info","isCentered","flexDir","ScrollableChat","map","label","placement","hasArrow","backgroundColor","marginLeft","padding","content","UserBadgeItem","handleFunction","admin","Close","pl","GroupChatListItem","background","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","handleSearch","query","handleRename","put","chatId","chatName","handleAddUser","user1","find","u","groupAdmin","handleRemove","View","flexWrap","pb","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","rendererSettings","preserveAspectRatio","chatPerson","chatperson_animation","emit","sendMessage","event","key","io","on","newMessageRecieved","chat","includes","ArrowBack","isGroupChat","toUpperCase","overflowY","alignSelf","margin","onKeyDown","marginBottom","lastTypingTime","getTime","setTimeout","Chatbox","ChatLoading","GroupChatModal","selectedUsers","setSelectedUsers","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","Add","latestMessage","substring","UserListItem","onlineUsers","left","motion","Box","SideDrawer","loadingChat","setLoadingChat","getallUsers","setGetallUsers","setOnlineUsers","off","useOnlineUsers","fetchAllUsers","accessChat","c","class","div","initial","x","animate","transition","repeat","Infinity","repeatType","count","effect","Effect","SCALE","Bell","notif","n","Button","ChevronDown","borderBottomWidth","Chatpage","App","path","component","Landingpage","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cdfc458.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.63e43767.png\";","import React from 'react';\r\nimport {\r\n    Box, Button, Flex, Image, Heading, IconButton,\r\n    Menu,\r\n    MenuButton,\r\n    MenuList,\r\n    MenuItem,\r\n} from '@chakra-ui/react';\r\nimport { HamburgerIcon } from '@chakra-ui/icons';\r\nimport logo from \"../media/logo.png\";\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nfunction Navbar() {\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Box\r\n            as=\"nav\"\r\n            p={2}\r\n            bg=\"#7839f6\"\r\n            position=\"sticky\"\r\n            top={0}\r\n            zIndex=\"sticky\"\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            boxShadow=\"0px 4px 6px rgba(0, 0, 0, 0.1)\"\r\n\r\n            alignItems=\"center\"\r\n        >\r\n            <Flex\r\n                alignItems=\"center\"\r\n                direction=\"row\"\r\n                color=\"white\"\r\n            >\r\n                <Image\r\n                    src={logo}\r\n                    alt=\"Website Logo\"\r\n                    boxSize={{ base: \"30px\", md: \"40px\" }}\r\n                    objectFit=\"contain\"\r\n                    mr={3}\r\n\r\n                />\r\n                <Heading\r\n                    as=\"h1\"\r\n                    fontSize={{ base: \"xl\", md: \"2xl\" }}\r\n                    textAlign=\"left\"\r\n                >\r\n                    TextRandom\r\n                </Heading>\r\n            </Flex>\r\n\r\n            {/* Hamburger Menu with Dropdown */}\r\n            <Box display={{ base: \"block\", md: \"none\" }}>\r\n                <Menu>\r\n                    <MenuButton\r\n                        as={IconButton}\r\n                        aria-label=\"Open Menu\"\r\n                        icon={<HamburgerIcon />}\r\n                        variant=\"outline\"\r\n                        color=\"white\"\r\n                        _active={{ bg: \"#5d16eb\" }}\r\n                        _hover={{ bg: \"#5d16eb\" }}\r\n                    />\r\n                    <MenuList bg=\"#7839f6\">\r\n                        <MenuItem color=\"white\">\r\n                            <Button as=\"a\" href=\"#home\" variant=\"solid\" color=\"black\" width=\"100%\" _hover={{ bg: \"gray.300\" }}\r\n                                _active={{ bg: \"#5d16eb\" }}  >\r\n                                Home\r\n                            </Button>\r\n                        </MenuItem>\r\n                        <MenuItem color=\"white\">\r\n\r\n                            <Button as=\"a\" href=\"#contactus\" variant=\"solid\" color=\"black\" width=\"100%\" >\r\n                                Contact\r\n                            </Button>\r\n\r\n                        </MenuItem>\r\n                        <MenuItem color=\"white\">\r\n                            <Button variant=\"solid\" color=\"black\" width=\"100%\">\r\n                                Blogs\r\n                            </Button>\r\n                        </MenuItem>\r\n                        <MenuItem color=\"white\">\r\n                            <Button variant=\"solid\" color=\"black\" width=\"100%\" onClick={() => history.push('/homepage')}>\r\n                                Sign In\r\n                            </Button>\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Menu>\r\n            </Box>\r\n\r\n\r\n            <Box display={{ base: \"none\", md: \"block\" }}>\r\n                <Button\r\n                    as=\"a\"\r\n                    href=\"#home\"\r\n                    variant=\"solid\"\r\n                    color=\"black\"\r\n                    mr={5}\r\n                    boxShadow=\"10px 1px 14px 1px rgba(0, 0, 0, 0.2)\"\r\n                    _hover={{ boxShadow: '0px 0px 0px 0px rgba(0,0,0,0)' }}\r\n                    borderRadius=\"20px\"\r\n                >\r\n                    Home\r\n                </Button>\r\n\r\n\r\n\r\n                <Button\r\n                    as=\"a\"\r\n                    href=\"#contactus\"\r\n                    variant=\"solid\"\r\n                    color=\"black\"\r\n                    mr={5}\r\n                    boxShadow=\"10px 1px 14px 1px rgba(0, 0, 0, 0.2)\"\r\n                    _hover={{ boxShadow: '0px 0px 0px 0px rgba(0,0,0,0)' }}\r\n                    borderRadius=\"20px\"\r\n                >\r\n                    Contact\r\n                </Button>\r\n\r\n                <Button\r\n                    variant=\"solid\"\r\n                    color=\"black\"\r\n                    mr={5}\r\n                    boxShadow=\"10px 1px 14px 1px rgba(0, 0, 0, 0.2)\"\r\n                    _hover={{ boxShadow: '0px 0px 0px 0px rgba(0,0,0,0)' }}\r\n                    borderRadius=\"20px\"\r\n                >\r\n                    Blogs\r\n                </Button>\r\n                <Button\r\n                    variant=\"solid\"\r\n                    color=\"black\"\r\n                    boxShadow=\"10px 1px 14px 1px rgba(0, 0, 0, 0.2)\"\r\n                    _hover={{ boxShadow: '0px 0px 0px 0px rgba(0,0,0,0)' }}\r\n                    borderRadius=\"20px\"\r\n                    onClick={() => history.push('/homepage')}\r\n                >\r\n                    Sign In\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/onlineUsers.9957c056.mp4\";","export default __webpack_public_path__ + \"static/media/searchbygender.58d08719.mp4\";","export default __webpack_public_path__ + \"static/media/chatfunction.b4fe3217.mp4\";","import { Box, Heading, Flex, Text } from '@chakra-ui/react';\r\n\r\nconst VideoSection = ({ title, description, videoUrl, reverse }) => {\r\n    // Disable right-click function\r\n    const handleContextMenu = (e) => {\r\n        e.preventDefault();  // Prevent right-click menu\r\n    };\r\n\r\n    return (\r\n        <Box textAlign=\"center\" py={8} px={4}>\r\n            <Flex\r\n                direction={{ base: \"column\", md: reverse ? \"row-reverse\" : \"row\" }}\r\n                alignItems=\"center\" // Center items vertically\r\n                justifyContent=\"space-between\" // Space items on the main axis\r\n            >\r\n                <Box flex=\"1\" textAlign=\"center\" mb={{ base: 4, md: 0 }}>\r\n                    <Heading as=\"h3\" fontSize={{ base: \"2xl\", md: \"3xl\" }} mb={2}>\r\n                        {title}\r\n                    </Heading>\r\n                    <Text fontSize={{ base: \"md\", md: \"lg\" }} color=\"gray.600\" >\r\n                        {description}\r\n                    </Text>\r\n                </Box>\r\n                <Box\r\n                    flex=\"1\"\r\n                    maxW={{ base: \"100%\", md: \"700px\" }}\r\n                    as=\"video\"\r\n                    src={videoUrl}\r\n                    autoPlay\r\n                    loop\r\n                    muted\r\n                    playsInline\r\n                    width=\"100%\"\r\n                    borderRadius=\"10px\"\r\n                    boxShadow=\"5px 5px 12px rgb(0 0 0 / 20%)\"\r\n                    onContextMenu={handleContextMenu}  // Disable right-click\r\n                    controls={false}                   // Disable video controls\r\n                    ml={{ md: reverse ? 0 : 10, base: 0 }}\r\n                    mr={{md: reverse ? 10 : 0, base: 0}}\r\n                />\r\n\r\n            </Flex>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default VideoSection;\r\n","export default __webpack_public_path__ + \"static/media/friends_transparen.83a00fad.png\";","import React, { useState } from 'react';\r\nimport { Box, Button, FormControl, FormLabel, Input, Textarea, useToast } from '@chakra-ui/react';\r\n\r\nconst ContactForm = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        message: ''\r\n    });\r\n\r\n    const toast = useToast();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData(e.target);\r\n\r\n        formData.append(\"access_key\", \"b3e9ddcf-e781-4dae-889b-d0eb5ed253b1\");\r\n\r\n        const response = await fetch(\"https://api.web3forms.com/submit\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        });\r\n\r\n        \r\n\r\n        // Display success message\r\n        toast({\r\n            title: 'Message Sent.',\r\n            description: 'Thank you for contacting us!',\r\n            status: 'success',\r\n            duration: 5000,\r\n            isClosable: true,\r\n        });\r\n\r\n        // Reset form fields after submission\r\n        setFormData({\r\n            name: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Box maxWidth=\"500px\" mx=\"auto\" mt={8} p={4} borderWidth=\"1px\" borderRadius=\"lg\" boxShadow=\"0px 5px 12px rgb(0 0 0 / 20%)\">\r\n            <form onSubmit={handleSubmit} >\r\n                <FormControl id=\"name\" isRequired>\r\n                    <FormLabel>Name</FormLabel>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter your name\"\r\n                    />\r\n                </FormControl>\r\n\r\n                <FormControl id=\"email\" mt={4} isRequired>\r\n                    <FormLabel>Email</FormLabel>\r\n                    <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter your email\"\r\n                    />\r\n                </FormControl>\r\n\r\n                <FormControl id=\"message\" mt={4} isRequired>\r\n                    <FormLabel>Message</FormLabel>\r\n                    <Textarea\r\n                        name=\"message\"\r\n                        value={formData.message}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter your message\"\r\n                    />\r\n                </FormControl>\r\n\r\n                <Button type=\"submit\" size=\"md\"\r\n                    variant=\"solid\"\r\n                    bg=\"navy\"\r\n                    color=\"white\"\r\n                    boxShadow=\"10px 10px 14px 1px rgba(0, 0, 0, 0.2)\"\r\n                    _hover={{ boxShadow: '0px 0px 0px 0px rgba(0,0,0,0)' }}\r\n                    mt={4}\r\n                    borderRadius=\"20px\"\r\n                    textAlign=\"center\"\r\n                    ml=\"40%\"\r\n                    \r\n                >\r\n                    Submit\r\n                </Button>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Center,\r\n  Container,\r\n  Stack,\r\n  Text,\r\n  Link,\r\n  Image,\r\n  useBreakpointValue,\r\n} from '@chakra-ui/react';\r\nimport logo from \"../media/logo.png\";\r\nconst Footer = () => {\r\n  return (\r\n    <Box bg=\"gray.800\" color=\"white\" py={6}>\r\n      <Container maxW=\"container.xl\"  >\r\n        <Center>\r\n        <Stack  direction={{ base: 'column', md: 'row' }} spacing={{ base: '20px', md: '700px' }} align=\"center\" >\r\n          {/* Logo Section */}\r\n          <Box display=\"flex\" alignItems=\"center\" >\r\n            <Image src={logo} alt=\"TextRandom\" boxSize=\"40px\" mr={1}/>\r\n            <Text fontSize={useBreakpointValue({ base: 'lg', md: 'xl' })} fontWeight=\"bold\" ml={2}>\r\n              TextRandom\r\n            </Text>\r\n          </Box>\r\n\r\n          {/* Links Section */}\r\n          <Stack direction={{ base: 'column', md: 'column' }} spacing={4} textAlign=\"center\">\r\n            <Link href=\"#contactus\" color=\"white\" _hover={{ textDecoration: 'underline' }}>\r\n              Contact Us\r\n            </Link>\r\n            <Link href=\"/privacy\" color=\"white\" _hover={{ textDecoration: 'underline' }}>\r\n              Privacy Policies\r\n            </Link>\r\n            <Link href=\"/terms\" color=\"white\" _hover={{ textDecoration: 'underline' }}>\r\n              Terms of Service\r\n            </Link>\r\n          </Stack>\r\n        </Stack>\r\n        </Center>\r\n        <Text textAlign=\"center\" mt={4} fontSize=\"sm\">\r\n          © {new Date().getFullYear()} TextRandom. All rights reserved.\r\n        </Text>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Box, Button, Center, Flex, Heading, Text, Stack, useBreakpointValue, Image, Divider } from '@chakra-ui/react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Lottie from \"react-lottie\";\r\nimport networkAnimation from \"../animations/network.json\";\r\nimport Navbar from '../components/Navbar';\r\nimport onlineVideo from \"./../media/onlineUsers.mp4\"\r\nimport searchByVideo from \"./../media/searchbygender.mp4\"\r\nimport chatfunctionVideo from \"./../media/chatfunction.mp4\"\r\nimport VideoSection from '../components/VideoSection';\r\nimport friends from \"./../media/friends_transparen.png\"\r\nimport ContactForm from '../components/ContactForm';\r\nimport Footer from '../components/Footer';\r\n\r\n\r\nconst LandingPage = () => {\r\n    const history = useHistory();  // useHistory hook to programmatically navigate\r\n    const network_animation = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: networkAnimation,\r\n        renderer: 'svg',\r\n    }\r\n    const showAnimation = useBreakpointValue({ base: false, md: true });\r\n    const showImages = useBreakpointValue({ base: true, md: false });\r\n    return (\r\n        <Box color=\"black\" minH=\"100vh\" w='100%' id=\"home\">\r\n            <Navbar />\r\n            {/* Hero Section */}\r\n            <Flex\r\n                minH=\"90vh\"\r\n                mr={10}\r\n                ml={10}\r\n                justify=\"center\"\r\n                align=\"center\"\r\n                direction={{ base: 'column', md: 'row' }} // Stack vertically on small screens, row on medium and larger screens\r\n                textAlign={{ base: 'center', md: 'left' }}\r\n\r\n                className=\"fadeeffect\"\r\n            >\r\n                <Box w={{ base: '100%', md: '45vw' }} mb={{ base: 8, md: 0 }}>\r\n                    <Heading as=\"h1\" size=\"xl\" mb={6} textAlign={{ base: 'center', md: 'left' }}>\r\n                        TextRandom - Chat with Random Strangers\r\n                    </Heading>\r\n                    <Text fontSize={{ base: 'lg', md: 'xl' }} maxW=\"600px\" textAlign={{ base: 'center', md: 'left' }}>\r\n                        Connect with friends, colleagues, and communities from around the world. Our anonymous chat platform is designed\r\n                        for real-time conversations with privacy in mind. Free sign-up!\r\n                    </Text>\r\n                    <Button\r\n                        mt={6}\r\n                        size=\"lg\"\r\n                        variant=\"solid\"\r\n                        bg=\"#5d16eb\"\r\n                        color=\"white\"\r\n                        boxShadow=\"10px 10px 14px 1px rgba(0, 0, 0, 0.2)\"\r\n                        _hover={{ boxShadow: '0px 0px 0px 0px rgba(0,0,0,0)' }}\r\n                        onClick={() => history.push('/homepage')}\r\n                        borderRadius=\"20px\"\r\n\r\n                    >\r\n                        Start Chat Now\r\n                    </Button>\r\n                </Box>\r\n                {showAnimation && (\r\n                    <Lottie options={network_animation} height=\"auto\" width=\"auto\" />\r\n                )}\r\n                {showImages && (\r\n                    <Image src={friends} height=\"auto\" width=\"750px\" />\r\n                )}\r\n            </Flex>\r\n\r\n            <Center>\r\n                <Divider\r\n                    mt={20}\r\n                    w=\"60%\"\r\n                    borderColor=\"gray.500\"\r\n                    borderWidth=\"1px\"\r\n                    opacity=\"0.8\"\r\n                    borderStyle=\"solid\"\r\n                />\r\n            </Center>\r\n\r\n            {/* Features Section */}\r\n            <Box mt={16} px={2} mr={{ md: 10, base: 5 }} ml={{ md: 10, base: 5 }} mb={20} className=\"fadeeffect\">\r\n                <Heading as=\"h2\" size=\"xl\" textAlign=\"center\" mb={8}>\r\n                    Top Features of TextRandom\r\n                </Heading>\r\n                <VideoSection\r\n                    title=\"Realtime Chat With Online People\"\r\n                    description=\"You can connect with online users instantly and text them on the go.\"\r\n                    videoUrl={onlineVideo}\r\n                />\r\n                <VideoSection\r\n                    videoUrl={searchByVideo}\r\n                    title=\"Chat with Specific Gender\"\r\n                    description=\"Chat with people who you are interested in. Chat with girl, boys, or any other users online anonymously.\"\r\n                    reverse\r\n                />\r\n                <VideoSection\r\n                    videoUrl={chatfunctionVideo}\r\n                    title=\"One to One Chat Functionality\"\r\n                    description=\"Engage in real-time, one-to-one online chat with instant notifications on our random talk site. Connect seamlessly with others for live conversations, making your chat experience faster and more interactive.\"\r\n                />\r\n\r\n            </Box>\r\n            {/* Why Choose Us Section */}\r\n            <Box mt={16} px={8}>\r\n                <Heading as=\"h2\" size=\"xl\" textAlign=\"center\" mb={8}>\r\n                    Why Choose TextRandom over Chatib, Chatblink, Chatiw ?\r\n                </Heading>\r\n                <Stack spacing={8} textAlign=\"center\" align=\"center\">\r\n                    <Box maxW=\"700px\" mx=\"auto\" bg=\"gray.100\" p={8} borderRadius=\"lg\" color=\"teal.700\">\r\n                        <Text fontSize=\"lg\">\r\n                            <strong>Security and Privacy</strong> - We take your privacy seriously. TextRandom uses encryption to\r\n                            ensure your messages remain secure.\r\n                        </Text>\r\n                    </Box>\r\n                    <Box maxW=\"700px\" mx=\"auto\" bg=\"gray.100\" p={8} borderRadius=\"lg\" color=\"teal.700\">\r\n                        <Text fontSize=\"lg\">\r\n                            <strong>User-Friendly Interface</strong> - Our chat interface is simple and easy to use, ensuring a smooth\r\n                            user experience whether you're on desktop or mobile.\r\n                        </Text>\r\n                    </Box>\r\n                    <Box maxW=\"700px\" mx=\"auto\" bg=\"gray.100\" p={8} borderRadius=\"lg\" color=\"teal.700\">\r\n                        <Text fontSize=\"lg\">\r\n                            <strong>Completely Free</strong> - TextRandom is completely free to use, with no hidden fees or in-app\r\n                            purchases.\r\n                        </Text>\r\n                    </Box>\r\n                    <Box maxW=\"700px\" mx=\"auto\" bg=\"gray.100\" p={8} borderRadius=\"lg\" color=\"teal.700\">\r\n                        <Text fontSize=\"lg\">\r\n                            <strong>Free One to One & Group Chat Rooms</strong> - Engage in multiple chatrooms and discussions with users worldwide which you can create by yourself.\r\n                        </Text>\r\n                    </Box>\r\n                    <Box maxW=\"700px\" mx=\"auto\" bg=\"gray.100\" p={8} borderRadius=\"lg\" color=\"teal.700\">\r\n                        <Text fontSize=\"lg\">\r\n                            <strong>Global Community</strong> - Connect with men and women from the USA, UK, India, and other countries and free chat with them and make friends online.\r\n                        </Text>\r\n                    </Box>\r\n                    <Box maxW=\"700px\" mx=\"auto\" bg=\"gray.100\" p={8} borderRadius=\"lg\" color=\"teal.700\">\r\n                        <Text fontSize=\"lg\">\r\n                            <strong>Mobile-Friendly</strong> - You can Chat seamlessly on your Android, iPhone, iPad, or desktop anytime, anywhere. online. Our website supports multiple devices and smooth user interface without any cost.\r\n                        </Text>\r\n                    </Box>\r\n                    <Box maxW=\"700px\" mx=\"auto\" bg=\"gray.100\" p={8} borderRadius=\"lg\" color=\"teal.700\">\r\n                        <Text fontSize=\"lg\">\r\n                            <strong>Private Conversations</strong> - Easily start private chats with people nearby or across the globe.\r\n                        </Text>\r\n                    </Box>\r\n                    <Box maxW=\"700px\" mx=\"auto\" bg=\"gray.100\" p={8} borderRadius=\"lg\" color=\"teal.700\">\r\n                        <Text fontSize=\"lg\">\r\n                            <strong>Meet New Friends</strong> - Discover and make friends in our lively Chat Page and Anonymous chat services.\r\n                        </Text>\r\n                    </Box>\r\n                </Stack>\r\n            </Box>\r\n\r\n            {/* Call to Action */}\r\n            <Box mt={8} textAlign=\"center\">\r\n                <Button\r\n                    size=\"lg\"\r\n                    variant=\"solid\"\r\n                    bg=\"#5d16eb\"\r\n                    color=\"white\"\r\n                    boxShadow=\"10px 10px 14px 1px rgba(0, 0, 0, 0.2)\"\r\n                    _hover={{ boxShadow: '0px 0px 0px 0px rgba(0,0,0,0)' }}\r\n                    onClick={() => history.push(\"/homepage?tab=signup\")}\r\n                    borderRadius=\"20px\"\r\n                >\r\n                    Sign Up & Chat\r\n                </Button>\r\n            </Box>\r\n\r\n            <Center>\r\n                <Divider\r\n                    mt={20}\r\n                    w=\"60%\"\r\n                    borderColor=\"gray.500\"\r\n                    borderWidth=\"1px\"\r\n                    opacity=\"0.8\"\r\n                    borderStyle=\"solid\"\r\n                />\r\n            </Center>\r\n            <Box mb={8} mt={10} id=\"contactus\">\r\n                <Heading as=\"h2\" size=\"xl\" textAlign=\"center\" >\r\n                    Contact Us\r\n                </Heading>\r\n                <ContactForm />\r\n            </Box>\r\n\r\n            <Footer />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ({ children }) => {\r\n  const [selectedChat, setSelectedChat] = useState();\r\n  const [user, setUser] = useState();\r\n  const [notification, setNotification] = useState([]);\r\n  const [chats, setChats] = useState();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    setUser(userInfo);\r\n\r\n    if (!userInfo) history.push(\"/\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [history]);\r\n\r\n  return (\r\n    <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        setSelectedChat,\r\n        user,\r\n        setUser,\r\n        notification,\r\n        setNotification,\r\n        chats,\r\n        setChats,\r\n      }}\r\n    >\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n\r\nexport const ChatState = () => {\r\n  return useContext(ChatContext);\r\n};\r\n\r\nexport default ChatProvider;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useDisclosure } from \"@chakra-ui/react\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();  // For modal control\r\n  \r\n\r\n  const history = useHistory();\r\n  const { setUser } = ChatState();\r\n\r\n  const submitHandler = async () => {\r\n    setLoading(true);\r\n    if (!email || !password) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `${process.env.REACT_APP_ENDPOINT}/api/user/login`,\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      toast({\r\n        title: \"Login Successful\",\r\n        status: \"success\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setUser(data);\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setLoading(false);\r\n      history.push(\"/chats\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"10px\">\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          value={email}\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter password\"\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={loading}\r\n      >\r\n        Login\r\n      </Button>\r\n      \r\n       {/* Button to trigger Modal */}\r\n       <Button\r\n          variant=\"solid\"\r\n          colorScheme=\"green\"\r\n          width=\"100%\"\r\n          onClick={onOpen}\r\n        >\r\n          Read Guidelines\r\n        </Button>\r\n      \r\n\r\n      {/* Modal for Guidelines */}\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Guidelines</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody px={10} >\r\n            <ol>\r\n              <li>Never share personal info like your real name, address, or phone number.</li>\r\n              <li>Avoid sharing photos or videos with strangers.</li>\r\n              <li>Don’t agree to meet someone from online chats in person.</li>\r\n              <li>Beware of scams, phishing, and suspicious links.</li>\r\n              <li>Trust your instincts and leave a conversation if something feels wrong.</li>\r\n              <li>Take care of your mental health and take breaks if needed.</li>\r\n              <li>You must be 18+ to use this site.</li>\r\n              <li>Do not share your personal account handles with anyone.</li>\r\n            </ol>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { FormControl, FormLabel, } from \"@chakra-ui/form-control\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport { VStack } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  Select,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n} from \"@chakra-ui/react\";\r\n\r\nconst Signup = () => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClick = () => setShow(!show);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [gender, setGender] = useState();\r\n  const [age, setAge] = useState();\r\n  const [confirmpassword, setConfirmpassword] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [pic, setPic] = useState();\r\n  const [picLoading, setPicLoading] = useState(false);\r\n\r\n  const submitHandler = async () => {\r\n    setPicLoading(true);\r\n    if (!name || !email || !gender || !age || !password || !confirmpassword) {\r\n      toast({\r\n        title: \"Please Fill all the Feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n    if (password !== confirmpassword) {\r\n      toast({\r\n        title: \"Passwords Do Not Match\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (age < 18) {\r\n      toast({\r\n        title: \"You must be 18 or older to register\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n\r\n    console.log(name, email, gender, age, password, pic);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `${process.env.REACT_APP_ENDPOINT}/api/user`,\r\n        {\r\n          name,\r\n          email,\r\n          gender,\r\n          age,\r\n          password,\r\n          pic,\r\n        },\r\n        config\r\n      );\r\n      console.log(data);\r\n      toast({\r\n        title: \"Registration Successful, Sign In Now.\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n      setPicLoading(false);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    setPicLoading(true);\r\n    if (pics === undefined) {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    console.log(pics);\r\n\r\n    // Check the file size (100KB = 102400 bytes)\r\n    const fileSizeLimit = 100 * 1024; // 100KB\r\n    if (pics.size > fileSizeLimit) {\r\n      toast({\r\n        title: \"File size too large\",\r\n        description: \"Image must be less than 100KB\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", process.env.REACT_APP_UPLOAD_PRESET);\r\n      data.append(\"cloud_name\",process.env.REACT_APP_CLOUD_NAME);\r\n      fetch(process.env.REACT_APP_CLOUDINARY_URL, {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(data.url.toString());\r\n          setPicLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setPicLoading(false);\r\n        });\r\n    } else {\r\n      toast({\r\n        title: \"Please Select an Image!\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setPicLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"5px\">\r\n      <FormControl id=\"first-name\" isRequired>\r\n        <FormLabel>Name</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Your Name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </FormControl>\r\n      <FormControl id=\"email\" isRequired>\r\n        <FormLabel>Email Address</FormLabel>\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"Enter Your Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id=\"gender\" isRequired>\r\n        <FormLabel >Gender</FormLabel>\r\n        <Select\r\n          placeholder=\"Select Gender\"\r\n          value={gender} // Bind value to the state\r\n          onChange={(e) => setGender(e.target.value)} // Step 3: Attach onChange handler\r\n        >\r\n          <option value=\"Male\">Male</option>\r\n          <option value=\"Female\">Female</option>\r\n          <option value=\"Other\">Other</option>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <FormControl id=\"age\" isRequired>\r\n        <FormLabel>Your Age</FormLabel>\r\n        <NumberInput max={101} min={0}\r\n          value={age}\r\n          onChange={(value) => setAge(value)}\r\n        >\r\n          <NumberInputField />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n      </FormControl>\r\n\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Enter Password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"password\" isRequired>\r\n        <FormLabel>Confirm Password</FormLabel>\r\n        <InputGroup size=\"md\">\r\n          <Input\r\n            type={show ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm password\"\r\n            onChange={(e) => setConfirmpassword(e.target.value)}\r\n          />\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </FormControl>\r\n      <FormControl id=\"pic\">\r\n        <FormLabel>Upload your Picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading={picLoading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Signup;","export default __webpack_public_path__ + \"static/media/logo.63e43767.png\";","import {\r\n  Box,\r\n  Container,\r\n  Tab,\r\n  TabList,\r\n  TabPanel,\r\n  TabPanels,\r\n  Tabs,\r\n  Text,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport Login from \"../components/Authentication/Login\";\r\nimport Signup from \"../components/Authentication/Signup\";\r\nimport logo from \"../components/Images/logo.png\"\r\nfunction Homepage() {\r\n  const history = useHistory();\r\n  const location = useLocation(); // useLocation hook to get the query parameter\r\n  const [tabIndex, setTabIndex] = useState(0); // state to control tab index\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n    if (user) history.push(\"/chats\");\r\n\r\n    // Check for query parameter to determine which tab to show\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const tab = queryParams.get(\"tab\");\r\n\r\n    if (tab === \"signup\") {\r\n      setTabIndex(1); // Set tab to Sign Up if 'signup' is passed\r\n    } else {\r\n      setTabIndex(0); // Default to Login\r\n    }\r\n  }, [history, location]);\r\n\r\n  return (\r\n    <Container maxW=\"xl\" centerContent>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"center\"\r\n        p={3}\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        m=\"40px 0 15px 0\"\r\n        borderRadius=\"lg\"\r\n        borderWidth=\"1px\"\r\n        _hover={{ bg: 'gray.200' }}\r\n        cursor=\"pointer\"\r\n        onClick={() => history.push('/')}  // navigate to Homepage\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Image\r\n            borderRadius=\"full\"\r\n            boxSize={{ base: '40px', md: '50px' }}\r\n            src={logo}\r\n            alt=\"TextRandom Logo\"\r\n            mr={2}\r\n          />\r\n          <Text fontSize={{ base: 'lg', md: '4xl' }} fontFamily=\"Rubik\">\r\n            TextRandom\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\r\n        <Tabs\r\n          isFitted variant=\"soft-rounded\"\r\n          index={tabIndex} // control the active tab based on the tabIndex state\r\n          onChange={(index) => setTabIndex(index)} // update the tab index when tab is changed\r\n        >\r\n          <TabList mb=\"1em\">\r\n            <Tab>Login</Tab>\r\n            <Tab>Sign Up</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <Login />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <Signup />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import { FormControl } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\r\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\r\nimport ScrollableChat from \"./ScrollableChat\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../animations/typing.json\";\r\nimport chatperson_animation from \"../animations/people_chat.json\";\r\nimport io from \"socket.io-client\";\r\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\nconst ENDPOINT = process.env.REACT_APP_ENDPOINT; // Change After deployment\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  const chatPerson = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: chatperson_animation,\r\n    renderer: 'svg',\r\n  }\r\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\r\n    ChatState();\r\n\r\n  const fetchMessages = async () => {\r\n    if (!selectedChat) return;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n\r\n      const { data } = await axios.get(\r\n        `${process.env.REACT_APP_ENDPOINT}/api/message/${selectedChat._id}`,\r\n        config\r\n      );\r\n      setMessages(data);\r\n      setLoading(false);\r\n\r\n      socket.emit(\"join chat\", selectedChat._id);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Messages\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    if (event.key === \"Enter\" && newMessage) {\r\n      socket.emit(\"stop typing\", selectedChat._id);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        setNewMessage(\"\");\r\n        const { data } = await axios.post(\r\n          `${process.env.REACT_APP_ENDPOINT}/api/message`,\r\n          {\r\n            content: newMessage,\r\n            chatId: selectedChat,\r\n          },\r\n          config\r\n        );\r\n        socket.emit(\"new message\", data);\r\n        setMessages([...messages, data]);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to send the Message\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.emit(\"setup\", user);\r\n    socket.emit('userConnected', user._id); \r\n    socket.on(\"connected\", () => setSocketConnected(true));\r\n    socket.on(\"typing\", () => setIsTyping(true));\r\n    socket.on(\"stop typing\", () => setIsTyping(false));\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n\r\n    selectedChatCompare = selectedChat;\r\n    // eslint-disable-next-line\r\n  }, [selectedChat]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message recieved\", (newMessageRecieved) => {\r\n\r\n      \r\n      \r\n      if (\r\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\r\n        selectedChatCompare._id !== newMessageRecieved.chat._id\r\n      ) {\r\n        if (!notification.includes(newMessageRecieved)) {\r\n          setNotification([newMessageRecieved, ...notification]);\r\n          setFetchAgain(!fetchAgain);\r\n        }\r\n      } else {\r\n        setMessages([...messages, newMessageRecieved]);\r\n      }\r\n    });\r\n  });\r\n\r\n  const typingHandler = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!socketConnected) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.emit(\"typing\", selectedChat._id);\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.emit(\"stop typing\", selectedChat._id);\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {selectedChat ? (\r\n        <>\r\n          <Text\r\n            fontSize={{ base: \"20px\", md: \"30px\" }}\r\n            pb={3}\r\n            px={2}\r\n            w=\"100%\"\r\n            fontFamily=\"Rubik\"\r\n            d=\"flex\"\r\n            justifyContent={{ base: \"space-between\" }}\r\n            alignItems=\"center\"\r\n          >\r\n            <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n            {messages &&\r\n              (!selectedChat.isGroupChat ? (\r\n                <>\r\n                  {getSender(user, selectedChat.users)}\r\n                  <ProfileModal\r\n                    user={getSenderFull(user, selectedChat.users)}\r\n                    \r\n                  />\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {selectedChat.chatName.toUpperCase()}\r\n                  <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n                  />\r\n                </>\r\n              ))}\r\n          </Text>\r\n          <Box\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            p={3}\r\n            bg=\"#E8E8E8\"\r\n            w=\"100%\"\r\n            h=\"100%\"\r\n            borderRadius=\"lg\"\r\n            overflowY=\"hidden\"\r\n          >\r\n            {loading ? (\r\n              <Spinner\r\n                size=\"xl\"\r\n                w={20}\r\n                h={20}\r\n                alignSelf=\"center\"\r\n                margin=\"auto\"\r\n              />\r\n            ) : (\r\n              <div className=\"messages\">\r\n                <ScrollableChat messages={messages} />\r\n              </div>\r\n            )}\r\n\r\n            <FormControl\r\n              onKeyDown={sendMessage}\r\n              id=\"first-name\"\r\n              isRequired\r\n              mt={3}\r\n            >\r\n              {istyping ? (\r\n                <div>\r\n                  <Lottie\r\n                    options={defaultOptions}\r\n                    // height={50}\r\n                    width={70}\r\n                    style={{ marginBottom: 15, marginLeft: 0 }}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Input\r\n                variant=\"filled\"\r\n                bg=\"#E0E0E0\"\r\n                placeholder=\"Enter a message..\"\r\n                value={newMessage}\r\n                onChange={typingHandler}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        // to get socket.io on same page\r\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\" flexDir=\"column\">\r\n          \r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Rubik\">\r\n            Click on Add Friends & Start Chatting\r\n          </Text>\r\n          <Lottie\r\n                options={chatPerson}\r\n                height={400}\r\n                width={400}\r\n               />\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Rubik\">\r\n            Be Respectful & Be Anonymous\r\n          </Text>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleChat;\r\n","export const isSameSenderMargin = (messages, m, i, userId) => {\r\n  // console.log(i === messages.length - 1);\r\n\r\n  if (\r\n    i < messages.length - 1 &&\r\n    messages[i + 1].sender._id === m.sender._id &&\r\n    messages[i].sender._id !== userId\r\n  )\r\n    return 33;\r\n  else if (\r\n    (i < messages.length - 1 &&\r\n      messages[i + 1].sender._id !== m.sender._id &&\r\n      messages[i].sender._id !== userId) ||\r\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\r\n  )\r\n    return 0;\r\n  else return \"auto\";\r\n};\r\n\r\nexport const isSameSender = (messages, m, i, userId) => {\r\n  return (\r\n    i < messages.length - 1 &&\r\n    (messages[i + 1].sender._id !== m.sender._id ||\r\n      messages[i + 1].sender._id === undefined) &&\r\n    messages[i].sender._id !== userId\r\n  );\r\n};\r\n\r\nexport const isLastMessage = (messages, i, userId) => {\r\n  return (\r\n    i === messages.length - 1 &&\r\n    messages[messages.length - 1].sender._id !== userId &&\r\n    messages[messages.length - 1].sender._id\r\n  );\r\n};\r\n\r\nexport const isSameUser = (messages, m, i) => {\r\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\r\n};\r\n\r\nexport const getSender = (loggedUser, users) => {\r\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\r\n};\r\n\r\nexport const getSenderFull = (loggedUser, users) => {\r\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\r\n};\r\n","import { InfoIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  IconButton,\r\n  Text,\r\n  Image,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\"; // To make API calls\r\nimport { useHistory } from \"react-router-dom\"; // To redirect the user after logout\r\n\r\nconst ProfileModal = ({ user, children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toast = useToast();\r\n  const history = useHistory(); // To handle redirection after logout\r\n  const loggedInUser = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n   // Function to handle account deletion\r\n  const handleDeleteAccount = async () => {\r\n    try {\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`, // Include the token in the request header\r\n        },\r\n      };\r\n\r\n      // Make delete request\r\n      await axios.delete(\r\n        `${process.env.REACT_APP_ENDPOINT}/api/user/delete/${user._id}`,\r\n        config\r\n      );\r\n\r\n      toast({\r\n        title: \"Account Deleted\",\r\n        description: \"Your account has been successfully deleted.\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n\r\n      localStorage.removeItem(\"userInfo\"); // Assuming you store user info in localStorage\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: error.response?.data?.message || \"Failed to delete account.\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {children ? (\r\n        <span onClick={onOpen}>{children}</span>\r\n      ) : (\r\n        <IconButton d={{ base: \"flex\" }} icon={<InfoIcon />} onClick={onOpen} />\r\n      )}\r\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent h=\"460px\">\r\n          <ModalHeader\r\n            fontSize=\"30px\"\r\n            fontFamily=\"Rubik\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {user.name}\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody\r\n            d=\"flex\"\r\n            flexDir=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Image\r\n              borderRadius=\"full\"\r\n              boxSize=\"200px\"\r\n              src={user.pic}\r\n              alt={user.name}\r\n            />\r\n            <Text\r\n              fontSize={{ base: \"24px\", md: \"30px\" }}\r\n              fontFamily=\"Rubik\"\r\n            >\r\n              Gender: {user.gender}\r\n            </Text>\r\n            <Text\r\n              fontSize={{ base: \"24px\", md: \"30px\" }}\r\n              fontFamily=\"Rubik\"\r\n            >\r\n              Age: {user.age}\r\n            </Text>\r\n          </ModalBody>\r\n          <ModalFooter d=\"flex\" justifyContent=\"space-between\">\r\n          {/* Conditionally render the delete button only if the logged-in user is viewing their own profile */}\r\n          {loggedInUser._id === user._id && (\r\n              <Button colorScheme=\"red\" onClick={handleDeleteAccount}>\r\n                Delete My Account\r\n              </Button>\r\n            )}\r\n            <Button onClick={onClose}>Close</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileModal;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport {\r\n  isLastMessage,\r\n  isSameSender,\r\n  isSameSenderMargin,\r\n  isSameUser,\r\n} from \"../config/ChatLogics\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst ScrollableChat = ({ messages }) => {\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <ScrollableFeed>\r\n      {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"75%\",\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n    </ScrollableFeed>\r\n  );\r\n};\r\n\r\nexport default ScrollableChat;\r\n","import { CloseIcon } from \"@chakra-ui/icons\";\r\nimport { Badge } from \"@chakra-ui/layout\";\r\n\r\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\r\n  return (\r\n    <Badge\r\n      px={2}\r\n      py={1}\r\n      borderRadius=\"lg\"\r\n      m={1}\r\n      mb={2}\r\n      variant=\"solid\"\r\n      fontSize={12}\r\n      colorScheme=\"purple\"\r\n      cursor=\"pointer\"\r\n      onClick={handleFunction}\r\n    >\r\n      {user.name}\r\n      {admin === user._id && <span> (Admin)</span>}\r\n      <CloseIcon pl={1} />\r\n    </Badge>\r\n  );\r\n};\r\n\r\nexport default UserBadgeItem;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst GroupChatListItem = ({user, handleFunction }) => {\r\n  \r\n\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg=\"#E8E8E8\"\r\n      _hover={{\r\n        background: \"#5e18e9\",\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      d=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Gender : </b>\r\n          {user.gender}\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GroupChatListItem;","import { ViewIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n  IconButton,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport GroupChatListItem from \"./GroupChatListItem\";\r\n\r\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [renameloading, setRenameLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { selectedChat, setSelectedChat, user } = ChatState();\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`${process.env.REACT_APP_ENDPOINT}/api/user?search=${search}`, config);\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRename = async () => {\r\n    if (!groupChatName) return;\r\n\r\n    try {\r\n      setRenameLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `${process.env.REACT_APP_ENDPOINT}/api/chat/rename`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          chatName: groupChatName,\r\n        },\r\n        config\r\n      );\r\n\r\n      console.log(data._id);\r\n      // setSelectedChat(\"\");\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setRenameLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setRenameLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleAddUser = async (user1) => {\r\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\r\n      toast({\r\n        title: \"User Already in group!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selectedChat.groupAdmin._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can add someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `${process.env.REACT_APP_ENDPOINT}/api/chat/groupadd`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  const handleRemove = async (user1) => {\r\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\r\n      toast({\r\n        title: \"Only admins can remove someone!\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `${process.env.REACT_APP_ENDPOINT}/api/chat/groupremove`,\r\n        {\r\n          chatId: selectedChat._id,\r\n          userId: user1._id,\r\n        },\r\n        config\r\n      );\r\n\r\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\r\n      setFetchAgain(!fetchAgain);\r\n      fetchMessages();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: error.response.data.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n    setGroupChatName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"35px\"\r\n            fontFamily=\"Rubik\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            {selectedChat.chatName}\r\n          </ModalHeader>\r\n\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\r\n              {selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  admin={selectedChat.groupAdmin}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            <FormControl d=\"flex\">\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"solid\"\r\n                colorScheme=\"teal\"\r\n                ml={1}\r\n                isLoading={renameloading}\r\n                onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n\r\n            {loading ? (\r\n              <Spinner size=\"lg\" />\r\n            ) : (\r\n              searchResult?.map((user) => (\r\n                <GroupChatListItem\r\n                  key={user._id}\r\n                  user={user}\r\n                  handleFunction={() => handleAddUser(user)}\r\n                />\r\n              ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateGroupChatModal;\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport \"./styles.css\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\r\n  const { selectedChat } = ChatState();\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\r\n      alignItems=\"center\"\r\n      flexDir=\"column\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"68%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n","import { Stack } from \"@chakra-ui/layout\";\r\nimport { Skeleton } from \"@chakra-ui/skeleton\";\r\n\r\nconst ChatLoading = () => {\r\n  return (\r\n    <Stack>\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n      <Skeleton height=\"45px\" />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ChatLoading;\r\n","import {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Button,\r\n  useDisclosure,\r\n  FormControl,\r\n  Input,\r\n  useToast,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport GroupChatListItem from \"./GroupChatListItem\";\r\n\r\nconst GroupChatModal = ({ children }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const { user, chats, setChats } = ChatState();\r\n\r\n  const handleGroup = (userToAdd) => {\r\n    if (selectedUsers.includes(userToAdd)) {\r\n      toast({\r\n        title: \"User already added\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setSelectedUsers([...selectedUsers, userToAdd]);\r\n  };\r\n\r\n  const handleSearch = async (query) => {\r\n    setSearch(query);\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`${process.env.REACT_APP_ENDPOINT}/api/user?search=${search}`, config);\r\n      // console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (delUser) => {\r\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!groupChatName || !selectedUsers) {\r\n      toast({\r\n        title: \"Please fill all the feilds\",\r\n        status: \"warning\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `${process.env.REACT_APP_ENDPOINT}/api/chat/group`,\r\n        {\r\n          name: groupChatName,\r\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n        },\r\n        config\r\n      );\r\n      setChats([data, ...chats]);\r\n      onClose();\r\n      toast({\r\n        title: \"New Group Chat Created!\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Failed to Create the Chat!\",\r\n        description: error.response.data,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n            fontSize=\"28px\"\r\n            fontFamily=\"Rubik\"\r\n            d=\"flex\"\r\n            justifyContent=\"center\"\r\n          >\r\n            Create Group Chat\r\n          </ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\r\n              {selectedUsers.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  handleFunction={() => handleDelete(u)}\r\n                />\r\n              ))}\r\n            </Box>\r\n            {loading ? (\r\n              // <ChatLoading />\r\n              <div>Loading...</div>\r\n            ) : (\r\n              searchResult\r\n                ?.slice(0, 4)\r\n                .map((user) => (\r\n                  <GroupChatListItem\r\n                    key={user._id}\r\n                    user={user}\r\n                    handleFunction={() => handleGroup(user)}\r\n                  />\r\n                ))\r\n            )}\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\r\n              Create Chat\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupChatModal;\r\n","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSender } from \"../config/ChatLogics\";\r\nimport ChatLoading from \"./ChatLoading\";\r\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\r\nimport { Button } from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst MyChats = ({ fetchAgain }) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`${process.env.REACT_APP_ENDPOINT}/api/chat`, config);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n      flexDir=\"column\"\r\n      alignItems=\"center\"\r\n      p={3}\r\n      bg=\"white\"\r\n      w={{ base: \"100%\", md: \"31%\" }}\r\n      borderRadius=\"lg\"\r\n      borderWidth=\"1px\"\r\n    >\r\n      <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Rubik\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n        My Chats\r\n        <GroupChatModal>\r\n          <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"14px\", md: \"10px\", lg: \"16px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n        </GroupChatModal>\r\n      </Box>\r\n      <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        {chats ? (\r\n          <Stack overflowY=\"scroll\">\r\n            {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#5e18e9\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                {chat.latestMessage && (\r\n                  <Text fontSize=\"xs\">\r\n                    <b>{chat.latestMessage.sender.name} : </b>\r\n                    {chat.latestMessage.content.length > 50\r\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\r\n                      : chat.latestMessage.content}\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            ))}\r\n          </Stack>\r\n        ) : (\r\n          <ChatLoading />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MyChats;\r\n","import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\nconst UserListItem = ({ user, handleFunction, onlineUsers }) => {\r\n  \r\n  // Function to determine background color based on gender\r\n  const getBackgroundColor = () => {\r\n    if (user.gender === 'Male') {\r\n      return '#d0e8ff';  // Light blue for male\r\n    } else if (user.gender === 'Female') {\r\n      return '#ffd0e8';  // Light pink for female\r\n    } else {\r\n      return '#e8e8e8';  // Gray for others or unspecified\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      onClick={handleFunction}\r\n      cursor=\"pointer\"\r\n      bg={getBackgroundColor}\r\n      _hover={{\r\n        background: \"#5e18e9\",\r\n        color: \"white\",\r\n      }}\r\n      w=\"100%\"\r\n      d=\"flex\"\r\n      alignItems=\"center\"\r\n      color=\"black\"\r\n      px={3}\r\n      py={2}\r\n      mb={2}\r\n      borderRadius=\"lg\"\r\n      position=\"relative\" // To position the online indicator correctly\r\n    >\r\n      <Avatar\r\n        mr={2}\r\n        size=\"sm\"\r\n        cursor=\"pointer\"\r\n        name={user.name}\r\n        src={user.pic}\r\n      />\r\n      \r\n      <Box>\r\n        <Text>{user.name}</Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Gender : </b>\r\n          {user.gender}\r\n        </Text>\r\n        <Text fontSize=\"xs\">\r\n          <b>Age : </b>\r\n          {user.age}\r\n        </Text>\r\n        \r\n      </Box>\r\n       {/* Online Indicator */}\r\n       {onlineUsers[user._id] && (\r\n        <Box\r\n          ml={2}\r\n          w={3}\r\n          h={3}\r\n          borderRadius=\"full\"\r\n          bg=\"green.500\"\r\n          position=\"absolute\"\r\n          left=\"80%\"\r\n          \r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserListItem;\r\n","import { Button } from \"@chakra-ui/button\";\r\nimport { motion } from 'framer-motion';\r\nimport { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport {\r\n  Menu,\r\n  MenuButton,\r\n  MenuDivider,\r\n  MenuItem,\r\n  MenuList,\r\n} from \"@chakra-ui/menu\";\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n} from \"@chakra-ui/modal\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { Avatar } from \"@chakra-ui/avatar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useToast } from \"@chakra-ui/toast\";\r\nimport ChatLoading from \"../ChatLoading\";\r\nimport { Spinner } from \"@chakra-ui/spinner\";\r\nimport ProfileModal from \"./ProfileModal\";\r\nimport NotificationBadge from \"react-notification-badge\";\r\nimport { Effect } from \"react-notification-badge\";\r\nimport { getSender } from \"../../config/ChatLogics\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport { useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { Image } from '@chakra-ui/react'\r\nimport logo from \"../Images/logo.png\"\r\n\r\nconst ENDPOINT = process.env.REACT_APP_ENDPOINT;\r\n\r\nconst MotionBox = motion(Box);\r\n\r\n\r\nconst useOnlineUsers = () => {\r\n  const [onlineUsers, setOnlineUsers] = useState({});\r\n\r\n  useEffect(() => {\r\n    const socket = io(ENDPOINT);\r\n    socket.on('updateOnlineUsers', (users) => {\r\n      // console.log(\"Received online users:\", users);\r\n      setOnlineUsers(users); // Update the state with online users\r\n    });\r\n\r\n    // Clean up on component unmount\r\n    return () => {\r\n      socket.off('updateOnlineUsers');\r\n    };\r\n  }, []);\r\n\r\n  return onlineUsers;\r\n};\r\n\r\n\r\n\r\n\r\nfunction SideDrawer() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState(false);\r\n  const [getallUsers, setGetallUsers] = useState([]);\r\n\r\n  const {\r\n    setSelectedChat,\r\n    user,\r\n    setUser,\r\n    notification,\r\n    setNotification,\r\n    chats,\r\n    setChats,\r\n  } = ChatState();\r\n  const onlineUsers = useOnlineUsers(); // Get online users\r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const history = useHistory();\r\n\r\n\r\n  const fetchAllUsers = async () => {\r\n    setLoading(true);\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const response = await axios.get(`${process.env.REACT_APP_ENDPOINT}/api/user?getallUsers`, config); // Adjust the endpoint as necessary\r\n      setGetallUsers(response.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occurred!\",\r\n        description: \"Failed to load users.\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllUsers(); // Fetch all users when the component mounts\r\n  }, []);\r\n\r\n\r\n  const logoutHandler = () => {\r\n    // Remove user info from local storage\r\n    localStorage.removeItem(\"userInfo\");\r\n\r\n    // Reset chat state\r\n    setSelectedChat(null); // Clear the selected chat\r\n    setChats([]);          // Clear the chat list\r\n    setNotification([]);   // Clear notifications (if applicable)\r\n\r\n\r\n    setUser(null); // Uncomment if you have a setUser function\r\n\r\n    toast({\r\n      title: \"Logged Out\",\r\n      description: \"You have successfully logged out!\",\r\n      status: \"success\",\r\n      duration: 2000,\r\n      isClosable: true,\r\n      position: \"bottom\",\r\n    });\r\n\r\n    // Redirect to the home or login page\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    if (!search) {\r\n      setSearchResult(getallUsers); // If no search term, show all users\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(`${process.env.REACT_APP_ENDPOINT}/api/user?search=${search}`, config);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the Search Results\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n\r\n    try {\r\n      setLoadingChat(true);\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(`${process.env.REACT_APP_ENDPOINT}/api/chat`, { userId }, config);\r\n\r\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onClose();\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error fetching the chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        d=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p=\"5px 10px 5px 10px\"\r\n        borderWidth=\"5px\"\r\n      >\r\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\r\n          <Button variant=\"outline\" colorScheme=\"black\" onClick={onOpen}>\r\n            <i class=\"fas fa-user-friends\" ></i>\r\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\r\n              Add Friends\r\n            </Text>\r\n          </Button>\r\n        </Tooltip>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          as={motion.div}\r\n          initial={{ opacity: 0, x: 0 }} // Initial position (no translation)\r\n          animate={{\r\n            opacity: 1,\r\n            x: [0, -5, 5, -5, 5, 0], // Shaking animation along the x-axis\r\n          }}\r\n          transition={{ duration: 1, repeat: Infinity, repeatType: 'loop' }}\r\n        >\r\n          <Image\r\n            borderRadius=\"full\"\r\n            boxSize={{ base: '30px', md: '40px' }}\r\n            src={logo}\r\n            alt=\"TextRandom Logo\"\r\n            mr={2}\r\n          />\r\n          <Text fontSize={{ base: 'lg', md: '2xl' }} fontFamily=\"Rubik\">\r\n            TextRandom\r\n          </Text>\r\n        </Box>\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1}>\r\n              <NotificationBadge\r\n                count={notification.length}\r\n                effect={Effect.SCALE}\r\n              />\r\n              <BellIcon fontSize=\"2xl\" m={1} />\r\n            </MenuButton>\r\n            <MenuList pl={2}>\r\n              {!notification.length && \"No New Messages\"}\r\n              {notification.map((notif) => (\r\n                <MenuItem\r\n                  key={notif._id}\r\n                  onClick={() => {\r\n                    setSelectedChat(notif.chat);\r\n                    setNotification(notification.filter((n) => n !== notif));\r\n                  }}\r\n                >\r\n                  {notif.chat.isGroupChat\r\n                    ? `New Message in ${notif.chat.chatName}`\r\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\r\n                </MenuItem>\r\n              ))}\r\n            </MenuList>\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\r\n              <Avatar\r\n                size=\"sm\"\r\n                cursor=\"pointer\"\r\n                name={user.name}\r\n                src={user.pic}\r\n              />\r\n            </MenuButton>\r\n            <MenuList>\r\n              <ProfileModal user={user} >\r\n                <MenuItem>My Profile</MenuItem>{\" \"}\r\n              </ProfileModal>\r\n              <MenuDivider />\r\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth=\"1px\">Add New Friends</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box d=\"flex\" pb={2}>\r\n              <Input\r\n                fontSize=\"sm\"\r\n                placeholder=\"Search by name or gender\"\r\n                mr={2}\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              <Button onClick={handleSearch}>Go</Button>\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading />\r\n            ) : (\r\n              searchResult.length > 0 ? (\r\n                searchResult?.map((user) => (\r\n                  <UserListItem\r\n                    key={user._id}\r\n                    user={user}\r\n                    onlineUsers={onlineUsers}\r\n                    handleFunction={() => accessChat(user._id)}\r\n                  />\r\n                ))\r\n              ) : (\r\n                getallUsers.map((user) => (\r\n                  <UserListItem\r\n                    key={user._id}\r\n                    user={user}\r\n                    onlineUsers={onlineUsers}\r\n                    handleFunction={() => accessChat(user._id)}\r\n                  />\r\n                ))\r\n              ))}\r\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;\r\n","import { Box } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport Chatbox from \"../components/Chatbox\";\r\nimport MyChats from \"../components/MyChats\";\r\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\r\nimport { ChatState } from \"../Context/ChatProvider\";\r\n\r\nconst Chatpage = () => {\r\n  const [fetchAgain, setFetchAgain] = useState(false);\r\n  const { user } = ChatState();\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      {user && <SideDrawer />}\r\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\r\n        {user && <MyChats fetchAgain={fetchAgain} />}\r\n        {user && (\r\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatpage;\r\n","import \"./App.css\";\r\nimport Landingpage from \"./Pages/Landingpage\";\r\nimport Homepage from \"./Pages/Homepage\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Chatpage from \"./Pages/Chatpage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Route path=\"/\" component={Landingpage} exact />\r\n      <Route path=\"/homepage\" component={Homepage} exact />\r\n      <Route path=\"/chats\" component={Chatpage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport ChatProvider from \"./Context/ChatProvider\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <ChakraProvider>\r\n    <BrowserRouter>\r\n      <ChatProvider>\r\n        <App />\r\n      </ChatProvider>\r\n    </BrowserRouter>\r\n  </ChakraProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}